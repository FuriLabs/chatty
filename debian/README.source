This package is maintained with git-buildpackage(1). It follows DEP-14
for branch naming (e.g. using debian/sid for the current version
in Debian unstable).

It uses pristine-tar(1) to store enough information in git to generate
bit identical tarballs when building the package without having
downloaded an upstream tarball first.

Currently, there are copyright issues with few files which led us to create
a +dfsg variant version.  This is handled using a tag upstream/<version>+dfsg0
which need to be set manually on the dedicated branch (upstream/dfsg-clean).
This setup requires few manual steps documented hereunder:
- merging of upstream/dfsg-clean branch from upstream/latest
- setting the tag upstream/<version>+dfsg0 from the upstream/dfsg-clean branch
- gbp export-orig --upstream-tag=upstream/<version>+dfsg0 --no-pristine-tar
- gbp pristine-tar commit --upstream-tag=upstream/<version>+dfsg0 ../<tarball>

When working with patches it is recommended to use "gbp pq import" to
import the patches, modify the source and then use "gbp pq export
--commit" to commit the modifications.

The changelog is generated using "gbp dch" so if you submit any
changes don't bother to add changelog entries but rather provide
a nice git commit message that can then end up in the changelog.

It is recommended to build the package with pbuilder using:

    gbp buildpackage --git-pbuilder

For information on how to set up a pbuilder environment see the
git-pbuilder(1) manpage. In short:

    DIST=sid git-pbuilder create
    gbp clone <project-url>
    cd <project>
    gbp buildpackage --git-pbuilder

Right now libcmatrix is a subproject in chatty, but the tarbal on gitlab does
not include it. To include it, you need to download the upstream, then run
"meson dist". This will give you a tarball with the subproject. Import that
with "gbp import-orig <the-generated-tarball>".


 -- Guido GÃ¼nther <agx@sigxcpu.org>,  Tue, 19 Dec 2023 10:09:19 -0700
